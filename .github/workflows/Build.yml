name: BuildTest


on: [push,pull_request]

jobs:
 linux-clang:
  name: Cross Platform Build in Linux For Clang
  runs-on: ubuntu-latest
  steps:
      - uses: actions/checkout@v2
        with:
         fetch-depth: 1
      - name: Prepare
        run: |
          cd baseee;
          mkdir build;
          cd build;
          cmake ..

      - name: CmakeRun
        env:
         CC: clang
         CXX: clang++
        run: |
          cmake --build ./baseee/build/ -j 2

 mac-clang:
  name: Cross Platform Build in Mac For Clang
  runs-on: macos-latest
  steps:
      - uses: actions/checkout@v2
        with:
         fetch-depth: 1
      - name: Prepare
        run: |
          cd baseee;
          mkdir build;
          cd build;
          cmake ..
        
      - name: CmakeRun
        env:
         CC: clang
         CXX: clang++
        run: |
          cmake --build ./baseee/build/ -j 2

 linux-gcc:
  name: Cross Platform Build in Linux For Gcc
  runs-on: ubuntu-latest
  steps:
      - uses: actions/checkout@v2
        with:
         fetch-depth: 1
      - name: Prepare
        run: |
          cd baseee;
          mkdir build;
          cd build;
          cmake ..

      - name: CmakeRun
        env:
         CC: gcc
         CXX: g++
        run: |
          cmake --build ./baseee/build/ -j 2

 mac-gcc:
  name: Cross Platform Build in Mac For Gcc
  runs-on: macos-latest
  steps:
      - uses: actions/checkout@v2
        with:
         fetch-depth: 1
      - name: Prepare
        run: |
          cd baseee;
          mkdir build;
          cd build;
          cmake ..

      - name: CmakeRun
        env:
         CC: gcc-9
         CXX: g++-9
        run: |
          cmake --build ./baseee/build/ -j 2


 windows-msvc:
  name: Cross Platform Build in Windows
  runs-on: windows-latest
  steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
        with:
         fetch-depth: 1
      - name: Prepare
        run: |
          cd baseee;
          mkdir build;
          cd build;
          cmake ..

      - name: CmakeRun
        env:
         CC: cl
         CXX: cl
        run:
          cmake --build ./baseee/build/ -j 2

 End:
  name: Cross Platform Build End
  runs-on: ubuntu-latest
  needs: [windows-msvc,mac-clang,mac-gcc,linux-clang,linux-gcc]
  timeout-minutes: 10
  steps:
      - uses: actions/checkout@v2
        with:
         fetch-depth: 1
      - name: Prepare
        env:
            GitName: ${{ github.repository_owner }}
            GitEmail: ${{ secrets.GitEmail }}
            GitPassWord: ${{ secrets.GitPassWord }}
        run:
          echo "Cross-Platform Build Test PASS" &&
          echo " And Write Tag" &&
          git config user.name $GitName &&
          git config user.email $GitEmail &&
          echo "https://$GitName:$GitPassWord@github.com" >> ./.git-credentials &&
          git config credential.helper store

      - name: EndBuild
        run:
          TagVersion = 1.0. &&
          git tag -a v${TagVersion}${GITHUB_RUN_ID} -m "Build Success v${TagVersion}${GITHUB_RUN_ID}" &&
          git push origin --tags &&
          rm .git-credentials &&
          rm -rf .git &&
          echo "Git Tag Pass"